/* tslint:disable */

/* The &#x60;DateTime&#x60; type represents a single point in time and is stored withmillisecond precision plus a time zone specified by ISO 8601. All types comepreloaded with createdAt and modifiedAt timestamps that are automatically managedfor you. */
export type DateTime = any;

/* The &#x27;Secret&#x27; scalar type represents textual data, represented as UTF-8 that should notbe readable. The Secret type is often used to hide sensitive information such as passwordsand credentials. */
export type Secret = any;

/* An arbitrary object. AnyObject&#x27;s are not type checkedand are always returned in their entirety. */
export type AnyObject = any;

export interface Node {
  id: string; 
}

export interface Timestamped {
  createdAt: DateTime; 
  modifiedAt: DateTime; 
}

export interface Blob {
  blobMimeType?: string | null; 
  blobUrl?: string | null; 
}

export interface Query {
  node?: Node | null; 
  getRole?: Role | null; /* Get objects of type Role by id. */
  getFile?: File | null; /* Get objects of type File by id. */
  getPc?: PC | null; /* Get objects of type PC by id. */
  getUser?: User | null; /* Get objects of type User by id. */
  viewer?: Viewer | null; 
  checkHealth?: HealthStatus | null; /* Check the health of your GraphQL API by pinging the server.It will return &#x60;true&#x60; for healthy and &#x60;false&#x60; for unhealthy. */
  searchRequestLogs?: RequestLogSearchResults | null; 
}
/* The Role type */
export interface Role extends Node,Timestamped {
  members?: RoleMembersConnection | null; /* The user&#x60;s belonging to this role */
  name: string; /* The name of the role. */
  id: string; /* A globally unique ID. */
  createdAt: DateTime; /* When paired with the Node interface, this is an automatically managedtimestamp that is set when an object is first created. */
  modifiedAt: DateTime; /* When paired with the Node interface, this is an automatically managedtimestamp that is set whenever an object is mutated. */
}
/* An edge wraps a node and a cursor. Edges are returned byConnection types as a standard way to paginate through connection values. */
export interface RoleMembersConnection {
  edges?: RoleMembersEdge[] | null; /* The set of edges in this page. */
  pageInfo: PageInfo; /* Metadata on the current page of data. */
  aggregations?: UserAggregations | null; /* Aggregation operators for the User type. */
}
/* An edge wraps a node and a cursor. Edges are returned byConnection types as a standard way to paginate through connection values. */
export interface RoleMembersEdge {
  node: User; /* The node value for the edge. */
  cursor: string; /* An opaque cursor pointing to an object in a connection.Used by the &#x27;after&#x27; and &#x27;before&#x27; pagination arguments. */
  accessLevel: AccessLevel; /* The access level for this user enrollment. */
  modifiedAt: DateTime; /* When paired with the Node interface, this is an automatically managedtimestamp that is set whenever an object is mutated. */
  createdAt: DateTime; /* When paired with the Node interface, this is an automatically managedtimestamp that is set when an object is first created. */
}
/* The User type */
export interface User extends Node,Timestamped {
  roles?: UserRolesConnection | null; /* A list of roles in which this user is enrolled */
  modifiedAt: DateTime; /* When paired with the Node interface, this is an automatically managedtimestamp that is set whenever an object is mutated. */
  id: string; /* A globally unique ID. */
  createdAt: DateTime; /* When paired with the Node interface, this is an automatically managedtimestamp that is set when an object is first created. */
  lastLogin: DateTime; /* An automatically managed timestamp that is set every time a user logs in. */
  username: string; /* The user&#x27;s username. */
  playerCharacters?: PcConnection | null; 
}
/* An edge wraps a node and a cursor. Edges are returned byConnection types as a standard way to paginate through connection values. */
export interface UserRolesConnection {
  edges?: UserRolesEdge[] | null; /* The set of edges in this page. */
  pageInfo: PageInfo; /* Metadata on the current page of data. */
  aggregations?: RoleAggregations | null; /* Aggregation operators for the Role type. */
}
/* An edge wraps a node and a cursor. Edges are returned byConnection types as a standard way to paginate through connection values. */
export interface UserRolesEdge {
  node: Role; /* The node value for the edge. */
  cursor: string; /* An opaque cursor pointing to an object in a connection.Used by the &#x27;after&#x27; and &#x27;before&#x27; pagination arguments. */
  accessLevel: AccessLevel; /* The access level for this user enrollment. */
  modifiedAt: DateTime; /* When paired with the Node interface, this is an automatically managedtimestamp that is set whenever an object is mutated. */
  createdAt: DateTime; /* When paired with the Node interface, this is an automatically managedtimestamp that is set when an object is first created. */
}
/* PageInfo must contain fields hasPreviousPage and hasNextPage,both of which return non‚Äênull booleans. */
export interface PageInfo {
  hasNextPage: boolean; /* hasNextPage will be false if the client is not paginating with first,or if the client is paginating with first, and the server has determinedthat the client has reached the end of the set of edges defined by theircursors. */
  hasPreviousPage: boolean; /* hasPreviousPage will be false if the client is not paginating with last,or if the client is paginating with last, and the server has determinedthat the client has reached the end of the set of edges defined by theircursors. */
}

export interface RoleAggregations {
  count?: number | null; /* Returns the number of objects in the connection. */
  min?: RoleAggregationsMin | null; /* The minimum value for the field */
  max?: RoleAggregationsMax | null; /* The maximum value for the field */
}

export interface RoleAggregationsMin {
  name?: string | null; 
  createdAt?: DateTime | null; 
  modifiedAt?: DateTime | null; 
}

export interface RoleAggregationsMax {
  name?: string | null; 
  createdAt?: DateTime | null; 
  modifiedAt?: DateTime | null; 
}
/* An edge wraps a node and a cursor. Edges are returned byConnection types as a standard way to paginate through connection values. */
export interface PcConnection {
  edges?: PcEdge[] | null; /* The set of edges in this page. */
  pageInfo: PageInfo; /* Metadata on the current page of data. */
  aggregations?: PcAggregations | null; /* Aggregation operators for the PC type. */
}
/* An edge wraps a node and a cursor. Edges are returned byConnection types as a standard way to paginate through connection values. */
export interface PcEdge {
  node: PC; /* The node value for the edge. */
  cursor: string; /* An opaque cursor pointing to an object in a connection.Used by the &#x27;after&#x27; and &#x27;before&#x27; pagination arguments. */
}
/* The PC type */
export interface PC extends Node,Timestamped {
  id: string; /* A globally unique ID. */
  modifiedAt: DateTime; /* When paired with the Node interface, this is an automatically managedtimestamp that is set whenever an object is mutated. */
  player?: User | null; /* The reverse field of &#x27;playerCharacters&#x27; in M:1 connectionwith type &#x27;PC&#x27;. */
  createdAt: DateTime; /* When paired with the Node interface, this is an automatically managedtimestamp that is set when an object is first created. */
  abilities?: Ability[] | null; 
}
/* The Ability type */
export interface Ability {
  raceMod: number; 
  roll2?: number | null; 
  baseScore?: number | null; 
  levelMod: number; 
  roll3?: number | null; 
  roll1?: number | null; 
  proficient?: boolean | null; 
  magicMod: number; 
  abbr: string; 
}

export interface PcAggregations {
  count?: number | null; /* Returns the number of objects in the connection. */
  min?: PcAggregationsMin | null; /* The minimum value for the field */
  max?: PcAggregationsMax | null; /* The maximum value for the field */
}

export interface PcAggregationsMin {
  modifiedAt?: DateTime | null; 
  createdAt?: DateTime | null; 
}

export interface PcAggregationsMax {
  modifiedAt?: DateTime | null; 
  createdAt?: DateTime | null; 
}

export interface UserAggregations {
  count?: number | null; /* Returns the number of objects in the connection. */
  min?: UserAggregationsMin | null; /* The minimum value for the field */
  max?: UserAggregationsMax | null; /* The maximum value for the field */
}

export interface UserAggregationsMin {
  modifiedAt?: DateTime | null; 
  createdAt?: DateTime | null; 
  lastLogin?: DateTime | null; 
  username?: string | null; 
}

export interface UserAggregationsMax {
  modifiedAt?: DateTime | null; 
  createdAt?: DateTime | null; 
  lastLogin?: DateTime | null; 
  username?: string | null; 
}
/* The File type */
export interface File extends Node,Timestamped,Blob {
  createdAt: DateTime; /* When paired with the Node interface, this is an automatically managedtimestamp that is set when an object is first created. */
  id: string; /* A globally unique ID. */
  blobMimeType?: string | null; /* The mimeType of the blob asset. */
  modifiedAt: DateTime; /* When paired with the Node interface, this is an automatically managedtimestamp that is set whenever an object is mutated. */
  blobUrl?: string | null; /* A pre-signed url to your file. */
  name?: string | null; /* The name of the File. If no name is given, the uploaded file&#x27;s name will be used. */
}

export interface Viewer extends Node {
  id: string; 
  allRoles?: RoleConnection | null; /* Sift through all objects of type &#x27;Role&#x27;. */
  allFiles?: FileConnection | null; /* Sift through all objects of type &#x27;File&#x27;. */
  allPcs?: PcConnection | null; /* Sift through all objects of type &#x27;PC&#x27;. */
  allUsers?: UserConnection | null; /* Sift through all objects of type &#x27;User&#x27;. */
  user?: User | null; /* Returns the currently logged in user and is also the entry point for queries that leverage RELATION scoped permissions. */
}
/* An edge wraps a node and a cursor. Edges are returned byConnection types as a standard way to paginate through connection values. */
export interface RoleConnection {
  edges?: RoleEdge[] | null; /* The set of edges in this page. */
  pageInfo: PageInfo; /* Metadata on the current page of data. */
  aggregations?: RoleAggregations | null; /* Aggregation operators for the Role type. */
}
/* An edge wraps a node and a cursor. Edges are returned byConnection types as a standard way to paginate through connection values. */
export interface RoleEdge {
  node: Role; /* The node value for the edge. */
  cursor: string; /* An opaque cursor pointing to an object in a connection.Used by the &#x27;after&#x27; and &#x27;before&#x27; pagination arguments. */
}
/* An edge wraps a node and a cursor. Edges are returned byConnection types as a standard way to paginate through connection values. */
export interface FileConnection {
  edges?: FileEdge[] | null; /* The set of edges in this page. */
  pageInfo: PageInfo; /* Metadata on the current page of data. */
  aggregations?: FileAggregations | null; /* Aggregation operators for the File type. */
}
/* An edge wraps a node and a cursor. Edges are returned byConnection types as a standard way to paginate through connection values. */
export interface FileEdge {
  node: File; /* The node value for the edge. */
  cursor: string; /* An opaque cursor pointing to an object in a connection.Used by the &#x27;after&#x27; and &#x27;before&#x27; pagination arguments. */
}

export interface FileAggregations {
  count?: number | null; /* Returns the number of objects in the connection. */
  min?: FileAggregationsMin | null; /* The minimum value for the field */
  max?: FileAggregationsMax | null; /* The maximum value for the field */
}

export interface FileAggregationsMin {
  createdAt?: DateTime | null; 
  modifiedAt?: DateTime | null; 
  blobMimeType?: string | null; 
  blobUrl?: string | null; 
  name?: string | null; 
}

export interface FileAggregationsMax {
  createdAt?: DateTime | null; 
  modifiedAt?: DateTime | null; 
  blobMimeType?: string | null; 
  blobUrl?: string | null; 
  name?: string | null; 
}
/* An edge wraps a node and a cursor. Edges are returned byConnection types as a standard way to paginate through connection values. */
export interface UserConnection {
  edges?: UserEdge[] | null; /* The set of edges in this page. */
  pageInfo: PageInfo; /* Metadata on the current page of data. */
  aggregations?: UserAggregations | null; /* Aggregation operators for the User type. */
}
/* An edge wraps a node and a cursor. Edges are returned byConnection types as a standard way to paginate through connection values. */
export interface UserEdge {
  node: User; /* The node value for the edge. */
  cursor: string; /* An opaque cursor pointing to an object in a connection.Used by the &#x27;after&#x27; and &#x27;before&#x27; pagination arguments. */
}

export interface HealthStatus {
  healthy: boolean; /* Returns &#x60;true&#x60; for healthy and &#x60;false&#x60; for unhealthy. */
  message?: string | null; /* Additional information about the health of the API. */
}

export interface RequestLogSearchResults {
  edges?: RequestLogEdge[] | null; /* Returns a set of documents satisfying the query string and pagination arguments. The &#x27;q&#x27; querystring accepts any elasticsearch query string. See (https://www.elastic.co/guide/en/elasticsearch/reference/current/ query-dsl-query-string-query.html#query-string-syntax) for mre details. */
  aggregations?: RequestLogAggregationSet | null; /* Run complex aggregations on your data. */
  took?: number | null; 
}
/* An edge wraps a node and a cursor. Edges are returned byConnection types as a standard way to paginate through connection values. */
export interface RequestLogEdge {
  node: RequestLog; /* The node value for the edge. */
  cursor: string; /* An opaque cursor pointing to an object in a connection.Used by the &#x27;after&#x27; and &#x27;before&#x27; pagination arguments. */
}
/* ### RequestLogRequest Logs are backed by elasticsearch and therefore offer more powerful querying andanalytical capabilities. We have adapted the ElasticSearch API to better fit GraphQL, butthe concepts remain the same. The definitive guide is a great place to start if you arenew to search (https://www.elastic.co/guide/en/elasticsearch/guide/current/index.html),and these docs cover the API in more detail:(https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html) */
export interface RequestLog extends Node {
  id: string; 
  username?: string | null; 
  isAdmin?: boolean | null; 
  isBillable?: boolean | null; 
  start?: DateTime | null; 
  duration?: number | null; 
  responseSizeBytes?: number | null; 
  requestMethod?: string | null; 
  status?: string | null; 
  errors?: string[] | null; 
  resolvers?: ResolverLog[] | null; 
  createdAt: DateTime; 
}

export interface ResolverLog {
  parentType?: string | null; 
  returnType?: string | null; 
  parsedReturnType?: string | null; 
  fieldName?: string | null; 
  operation?: string | null; 
  start?: DateTime | null; 
  minDuration?: number | null; 
  maxDuration?: number | null; 
  avgDuration?: number | null; 
  totalDuration?: number | null; 
  count?: number | null; 
  path?: string[] | null; 
  statuses?: string | null; 
  errors?: string | null; 
}

export interface RequestLogAggregationSet {
  avg?: MetricAggregationResult | null; 
  cardinality?: MetricAggregationResult | null; 
  max?: MetricAggregationResult | null; 
  min?: MetricAggregationResult | null; 
  percentiles?: MetricAggregationResult | null; 
  stats?: StatsAggregationResult | null; 
  sum?: MetricAggregationResult | null; 
  value_count?: MetricAggregationResult | null; 
  date_range?: RequestLogBucketAggregation | null; 
  date_histogram?: RequestLogBucketAggregation | null; 
  terms?: RequestLogBucketAggregation | null; 
  filter?: RequestLogFilterAggregation | null; 
  resolvers?: NestedResolverLogAggregation | null; 
}

export interface MetricAggregationResult {
  value?: AnyObject | null; 
  value_as_string?: string | null; 
}

export interface StatsAggregationResult {
  count?: number | null; 
  min?: number | null; 
  max?: number | null; 
  avg?: number | null; 
  sum?: number | null; 
}

export interface RequestLogBucketAggregation {
  buckets?: RequestLogAggregationBucket[] | null; 
}

export interface RequestLogAggregationBucket {
  doc_count?: number | null; 
  key?: AnyObject | null; 
  key_as_string?: string | null; 
  aggregations?: RequestLogAggregationSet | null; 
}

export interface RequestLogFilterAggregation {
  doc_count?: number | null; 
  aggregations?: RequestLogAggregationSet | null; 
}

export interface NestedResolverLogAggregation {
  doc_count?: number | null; 
  aggregations?: ResolverLogAggregationSet | null; 
}

export interface ResolverLogAggregationSet {
  avg?: MetricAggregationResult | null; 
  cardinality?: MetricAggregationResult | null; 
  max?: MetricAggregationResult | null; 
  min?: MetricAggregationResult | null; 
  percentiles?: MetricAggregationResult | null; 
  stats?: StatsAggregationResult | null; 
  sum?: MetricAggregationResult | null; 
  value_count?: MetricAggregationResult | null; 
  date_range?: ResolverLogBucketAggregation | null; 
  date_histogram?: ResolverLogBucketAggregation | null; 
  terms?: ResolverLogBucketAggregation | null; 
  filter?: ResolverLogFilterAggregation | null; 
}

export interface ResolverLogBucketAggregation {
  buckets?: ResolverLogAggregationBucket[] | null; 
}

export interface ResolverLogAggregationBucket {
  doc_count?: number | null; 
  key?: AnyObject | null; 
  key_as_string?: string | null; 
  aggregations?: ResolverLogAggregationSet | null; 
}

export interface ResolverLogFilterAggregation {
  doc_count?: number | null; 
  aggregations?: ResolverLogAggregationSet | null; 
}

export interface Mutation {
  migrateSchema?: MigrateSchemaPayload | null; 
  loginUser?: LoginUserPayload | null; 
  changeUserPassword?: ChangeUserPasswordPayload | null; 
  createRole?: CreateRolePayload | null; /* Create objects of type Role. */
  updateRole?: UpdateRolePayload | null; /* Update objects of type Role. */
  deleteRole?: DeleteRolePayload | null; /* Delete objects of type Role. */
  createFile?: CreateFilePayload | null; /* Create objects of type File. */
  updateFile?: UpdateFilePayload | null; /* Update objects of type File. */
  deleteFile?: DeleteFilePayload | null; /* Delete objects of type File. */
  createPc?: CreatePcPayload | null; /* Create objects of type PC. */
  updatePc?: UpdatePcPayload | null; /* Update objects of type PC. */
  deletePc?: DeletePcPayload | null; /* Delete objects of type PC. */
  createUser?: CreateUserPayload | null; /* Create objects of type User. */
  updateUser?: UpdateUserPayload | null; /* Update objects of type User. */
  deleteUser?: DeleteUserPayload | null; /* Delete objects of type User. */
  addToUserRolesConnection?: AddToUserRolesConnectionPayload | null; /* Adds a connection between an object of type&#x27;Role&#x27; and an object of type User. You can editthe &#x27;UserRoles&#x27; bridge type to add/remove custom fields for this connection. */
  updateUserRolesConnection?: UpdateUserRolesConnectionPayload | null; /* Updates an existing connection between an object of type&#x27;Role&#x27; and an object of type User. */
  removeFromUserRolesConnection?: RemoveFromUserRolesConnectionPayload | null; /* Removes a connection between an object of type&#x27;Role&#x27; and an object of type User. */
}

export interface MigrateSchemaPayload {
  changedSchema?: Schema | null; /* The mutated Schema. */
  viewer?: Viewer | null; /* A view port into your application. */
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}
/* A Scaphold Schema. */
export interface Schema extends Node {
  id: string; /* A global id */
  name: string; 
  description?: string | null; 
  types?: Type[] | null; 
  createdAt?: DateTime | null; 
  modifiedAt?: DateTime | null; 
}
/* A Scaphold User. */
export interface Type extends Node {
  id: string; /* A global id */
  name: string; 
  description?: string | null; 
  kind?: TypeKind | null; 
  interfaces?: string[] | null; 
  fields?: Field[] | null; 
  permissions?: Permission[] | null; 
  values?: string[] | null; 
  isBridge?: boolean | null; 
  position?: number | null; 
  isEditable?: boolean | null; 
  isDeletable?: boolean | null; 
  isExtendable?: boolean | null; 
  createdAt?: DateTime | null; 
  modifiedAt?: DateTime | null; 
}
/* A Scaphold User. */
export interface Field extends Node {
  id: string; /* A global id */
  name: string; 
  description?: string | null; 
  columnName?: string | null; 
  nonNull?: boolean | null; 
  unique?: boolean | null; 
  indexed?: boolean | null; 
  type?: string | null; 
  ofType?: string | null; 
  ofTypeNonNull?: boolean | null; 
  reverseName?: string | null; 
  defaultValue?: AnyObject | null; 
  isEditable?: boolean | null; 
  through?: string | null; 
  position?: number | null; 
}
/* A scaphold type permission. */
export interface Permission extends Node {
  id: string; 
  scope: PermissionScopeEnum; 
  userFields?: Field[] | null; 
  protectedFields?: Field[] | null; 
  roles?: Role[] | null; 
  enabled?: boolean | null; 
  create?: boolean | null; 
  read?: boolean | null; 
  update?: boolean | null; 
  delete?: boolean | null; 
  createdAt?: DateTime | null; 
  modifiedAt?: DateTime | null; 
}

export interface LoginUserPayload {
  token?: string | null; /* The user&#x27;s authentication token. Embed this under the&#x27;Authorization&#x27; header with the format &#x27;Bearer &lt;token&gt;&#x27; */
  user?: User | null; /* The mutated User. */
  changedEdge?: UserEdge | null; /* An edge containing the mutated User. Use this to update your client side cache. */
  viewer?: Viewer | null; /* A view port into your application. */
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface ChangeUserPasswordPayload {
  changedUser?: User | null; /* The mutated User. */
  changedEdge?: UserEdge | null; /* An edge containing the mutated User. Use this to update your client side cache. */
  viewer?: Viewer | null; /* A view port into your application. */
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface CreateRolePayload {
  changedRole?: Role | null; /* The mutated Role. */
  changedEdge?: RoleEdge | null; /* An edge containing the mutated Role. Use this to update your client side cache. */
  viewer?: Viewer | null; /* A view port into your application. */
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface UpdateRolePayload {
  changedRole?: Role | null; /* The mutated Role. */
  changedEdge?: RoleEdge | null; /* An edge containing the mutated Role. Use this to update your client side cache. */
  viewer?: Viewer | null; /* A view port into your application. */
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface DeleteRolePayload {
  changedRole?: Role | null; /* The mutated Role. */
  changedEdge?: RoleEdge | null; /* An edge containing the mutated Role. Use this to update your client side cache. */
  viewer?: Viewer | null; /* A view port into your application. */
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface CreateFilePayload {
  changedFile?: File | null; /* The mutated File. */
  changedEdge?: FileEdge | null; /* An edge containing the mutated File. Use this to update your client side cache. */
  viewer?: Viewer | null; /* A view port into your application. */
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface UpdateFilePayload {
  changedFile?: File | null; /* The mutated File. */
  changedEdge?: FileEdge | null; /* An edge containing the mutated File. Use this to update your client side cache. */
  viewer?: Viewer | null; /* A view port into your application. */
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface DeleteFilePayload {
  changedFile?: File | null; /* The mutated File. */
  changedEdge?: FileEdge | null; /* An edge containing the mutated File. Use this to update your client side cache. */
  viewer?: Viewer | null; /* A view port into your application. */
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface CreatePcPayload {
  changedPc?: PC | null; /* The mutated PC. */
  changedEdge?: PcEdge | null; /* An edge containing the mutated PC. Use this to update your client side cache. */
  viewer?: Viewer | null; /* A view port into your application. */
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface UpdatePcPayload {
  changedPc?: PC | null; /* The mutated PC. */
  changedEdge?: PcEdge | null; /* An edge containing the mutated PC. Use this to update your client side cache. */
  viewer?: Viewer | null; /* A view port into your application. */
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface DeletePcPayload {
  changedPc?: PC | null; /* The mutated PC. */
  changedEdge?: PcEdge | null; /* An edge containing the mutated PC. Use this to update your client side cache. */
  viewer?: Viewer | null; /* A view port into your application. */
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface CreateUserPayload {
  token?: string | null; /* The user&#x27;s authentication token. Embed this under the&#x27;Authorization&#x27; header with the format &#x27;Bearer &lt;token&gt;&#x27; */
  changedUser?: User | null; /* The mutated User. */
  changedEdge?: UserEdge | null; /* An edge containing the mutated User. Use this to update your client side cache. */
  viewer?: Viewer | null; /* A view port into your application. */
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface UpdateUserPayload {
  changedUser?: User | null; /* The mutated User. */
  changedEdge?: UserEdge | null; /* An edge containing the mutated User. Use this to update your client side cache. */
  viewer?: Viewer | null; /* A view port into your application. */
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface DeleteUserPayload {
  changedUser?: User | null; /* The mutated User. */
  changedEdge?: UserEdge | null; /* An edge containing the mutated User. Use this to update your client side cache. */
  viewer?: Viewer | null; /* A view port into your application. */
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface AddToUserRolesConnectionPayload {
  changedUserRoles?: UserRoles | null; /* The mutated UserRoles. */
  changedEdge?: UserRolesEdge | null; /* An edge containing the mutated UserRoles. Use this to update your client side cache. */
  viewer?: Viewer | null; /* A view port into your application. */
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}
/* The UserRoles type */
export interface UserRoles extends Timestamped {
  accessLevel: AccessLevel; /* The access level for this user enrollment. */
  modifiedAt: DateTime; /* When paired with the Node interface, this is an automatically managedtimestamp that is set whenever an object is mutated. */
  createdAt: DateTime; /* When paired with the Node interface, this is an automatically managedtimestamp that is set when an object is first created. */
  role?: Role | null; 
  user?: User | null; 
}

export interface UpdateUserRolesConnectionPayload {
  changedUserRoles?: UserRoles | null; /* The mutated UserRoles. */
  changedEdge?: UserRolesEdge | null; /* An edge containing the mutated UserRoles. Use this to update your client side cache. */
  viewer?: Viewer | null; /* A view port into your application. */
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface RemoveFromUserRolesConnectionPayload {
  changedUserRoles?: UserRoles | null; /* The mutated UserRoles. */
  changedEdge?: UserRolesEdge | null; /* An edge containing the mutated UserRoles. Use this to update your client side cache. */
  viewer?: Viewer | null; /* A view port into your application. */
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface Subscription {
  subscribeToRole?: RoleSubscriptionPayload | null; 
  subscribeToFile?: FileSubscriptionPayload | null; 
  subscribeToPc?: PcSubscriptionPayload | null; 
  subscribeToUser?: UserSubscriptionPayload | null; 
}
/* A payload wrapper for mutation operations. */
export interface RoleSubscriptionPayload {
  mutation?: RoleMutationEvent | null; /* The type of mutation operation that triggered this subscription. */
  value?: Role | null; /* The object that was just mutated. */
  edge?: RoleEdge | null; 
}
/* A payload wrapper for mutation operations. */
export interface FileSubscriptionPayload {
  mutation?: FileMutationEvent | null; /* The type of mutation operation that triggered this subscription. */
  value?: File | null; /* The object that was just mutated. */
  edge?: FileEdge | null; 
}
/* A payload wrapper for mutation operations. */
export interface PcSubscriptionPayload {
  mutation?: PcMutationEvent | null; /* The type of mutation operation that triggered this subscription. */
  value?: PC | null; /* The object that was just mutated. */
  edge?: PcEdge | null; 
}
/* A payload wrapper for mutation operations. */
export interface UserSubscriptionPayload {
  mutation?: UserMutationEvent | null; /* The type of mutation operation that triggered this subscription. */
  value?: User | null; /* The object that was just mutated. */
  edge?: UserEdge | null; 
}
/* Where filter arguments for the User type */
export interface UserWhereArgs {
  roles?: UserRolesWhereArgs | null; /* Filter results based on a related object via the roles connection */
  password?: UserPasswordWhereArgs | null; /* Filter results for on the password field. */
  modifiedAt?: UserModifiedAtWhereArgs | null; /* Filter results for on the modifiedAt field. */
  id?: UserIdWhereArgs | null; /* Filter results for on the id field. */
  createdAt?: UserCreatedAtWhereArgs | null; /* Filter results for on the createdAt field. */
  lastLogin?: UserLastLoginWhereArgs | null; /* Filter results for on the lastLogin field. */
  username?: UserUsernameWhereArgs | null; /* Filter results for on the username field. */
  playerCharacters?: PcWhereArgs | null; /* Filter results based on a related object via the playerCharacters connection */
  OR?: UserWhereArgs[] | null; /* Combine mutiple where expressions using the OR operator. */
  AND?: UserWhereArgs[] | null; /* Combine mutiple where expressions using the AND operator. */
}
/* Select objects by filtering on objects in a connection */
export interface UserRolesWhereArgs {
  edge?: UserRolesEdgeWhereArgs | null; /* Filter on values on the connection edge. E.G. Get all users with readonly membership to a role. */
  node?: RoleWhereArgs | null; /* Filter on values in the target type. E.G. Get all users that are a member of the Executives role */
}
/* Where filter arguments for the UserRoles type */
export interface UserRolesEdgeWhereArgs {
  accessLevel?: UserRolesAccessLevelWhereArgs | null; /* Filter results based on values in the bridge model. */
  modifiedAt?: UserRolesModifiedAtWhereArgs | null; /* Filter results based on values in the bridge model. */
  createdAt?: UserRolesCreatedAtWhereArgs | null; /* Filter results based on values in the bridge model. */
}

export interface UserRolesAccessLevelWhereArgs {
  eq?: AccessLevel | null; /* Equal to. This takes a higher precedence than the other operators. */
  ne?: AccessLevel | null; /* Not equal to. */
  gt?: AccessLevel | null; /* Greater than. */
  gte?: AccessLevel | null; /* Greater than or equal to. */
  lt?: AccessLevel | null; /* Less than. */
  lte?: AccessLevel | null; /* Less than or equal to. */
  between?: AccessLevel[] | null; /* A two element tuple describing a range of values. */
  notBetween?: AccessLevel[] | null; /* A two element tuple describing an excluded range of values. */
  in?: AccessLevel[] | null; /* A list of values to include. */
  notIn?: AccessLevel[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface UserRolesModifiedAtWhereArgs {
  eq?: DateTime | null; /* Equal to. This takes a higher precedence than the other operators. */
  ne?: DateTime | null; /* Not equal to. */
  gt?: DateTime | null; /* Greater than. */
  gte?: DateTime | null; /* Greater than or equal to. */
  lt?: DateTime | null; /* Less than. */
  lte?: DateTime | null; /* Less than or equal to. */
  between?: DateTime[] | null; /* A two element tuple describing a range of values. */
  notBetween?: DateTime[] | null; /* A two element tuple describing an excluded range of values. */
  in?: DateTime[] | null; /* A list of values to include. */
  notIn?: DateTime[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface UserRolesCreatedAtWhereArgs {
  eq?: DateTime | null; /* Equal to. This takes a higher precedence than the other operators. */
  ne?: DateTime | null; /* Not equal to. */
  gt?: DateTime | null; /* Greater than. */
  gte?: DateTime | null; /* Greater than or equal to. */
  lt?: DateTime | null; /* Less than. */
  lte?: DateTime | null; /* Less than or equal to. */
  between?: DateTime[] | null; /* A two element tuple describing a range of values. */
  notBetween?: DateTime[] | null; /* A two element tuple describing an excluded range of values. */
  in?: DateTime[] | null; /* A list of values to include. */
  notIn?: DateTime[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}
/* Where filter arguments for the Role type */
export interface RoleWhereArgs {
  members?: RoleMembersWhereArgs | null; /* Filter results based on a related object via the members connection */
  name?: RoleNameWhereArgs | null; /* Filter results for on the name field. */
  id?: RoleIdWhereArgs | null; /* Filter results for on the id field. */
  createdAt?: RoleCreatedAtWhereArgs | null; /* Filter results for on the createdAt field. */
  modifiedAt?: RoleModifiedAtWhereArgs | null; /* Filter results for on the modifiedAt field. */
  OR?: RoleWhereArgs[] | null; /* Combine mutiple where expressions using the OR operator. */
  AND?: RoleWhereArgs[] | null; /* Combine mutiple where expressions using the AND operator. */
}
/* Select objects by filtering on objects in a connection */
export interface RoleMembersWhereArgs {
  edge?: UserRolesEdgeWhereArgs | null; /* Filter on values on the connection edge. E.G. Get all users with readonly membership to a role. */
  node?: UserWhereArgs | null; /* Filter on values in the target type. E.G. Get all users that are a member of the Executives role */
}

export interface RoleNameWhereArgs {
  eq?: string | null; /* Equal to. This takes a higher precedence than the other operators. */
  ne?: string | null; /* Not equal to. */
  gt?: string | null; /* Greater than. */
  gte?: string | null; /* Greater than or equal to. */
  lt?: string | null; /* Less than. */
  lte?: string | null; /* Less than or equal to. */
  between?: string[] | null; /* A two element tuple describing a range of values. */
  notBetween?: string[] | null; /* A two element tuple describing an excluded range of values. */
  in?: string[] | null; /* A list of values to include. */
  notIn?: string[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface RoleIdWhereArgs {
  eq?: string | null; /* Equal to. This takes a higher precedence than the other operators. */
  ne?: string | null; /* Not equal to. */
  in?: string[] | null; /* A list of values to include. */
  notIn?: string[] | null; /* A list of values to exclude. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface RoleCreatedAtWhereArgs {
  eq?: DateTime | null; /* Equal to. This takes a higher precedence than the other operators. */
  ne?: DateTime | null; /* Not equal to. */
  gt?: DateTime | null; /* Greater than. */
  gte?: DateTime | null; /* Greater than or equal to. */
  lt?: DateTime | null; /* Less than. */
  lte?: DateTime | null; /* Less than or equal to. */
  between?: DateTime[] | null; /* A two element tuple describing a range of values. */
  notBetween?: DateTime[] | null; /* A two element tuple describing an excluded range of values. */
  in?: DateTime[] | null; /* A list of values to include. */
  notIn?: DateTime[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface RoleModifiedAtWhereArgs {
  eq?: DateTime | null; /* Equal to. This takes a higher precedence than the other operators. */
  ne?: DateTime | null; /* Not equal to. */
  gt?: DateTime | null; /* Greater than. */
  gte?: DateTime | null; /* Greater than or equal to. */
  lt?: DateTime | null; /* Less than. */
  lte?: DateTime | null; /* Less than or equal to. */
  between?: DateTime[] | null; /* A two element tuple describing a range of values. */
  notBetween?: DateTime[] | null; /* A two element tuple describing an excluded range of values. */
  in?: DateTime[] | null; /* A list of values to include. */
  notIn?: DateTime[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface UserPasswordWhereArgs {
  eq?: Secret | null; /* Equal to. This takes a higher precedence than the other operators. */
  ne?: Secret | null; /* Not equal to. */
  gt?: Secret | null; /* Greater than. */
  gte?: Secret | null; /* Greater than or equal to. */
  lt?: Secret | null; /* Less than. */
  lte?: Secret | null; /* Less than or equal to. */
  between?: Secret[] | null; /* A two element tuple describing a range of values. */
  notBetween?: Secret[] | null; /* A two element tuple describing an excluded range of values. */
  in?: Secret[] | null; /* A list of values to include. */
  notIn?: Secret[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface UserModifiedAtWhereArgs {
  eq?: DateTime | null; /* Equal to. This takes a higher precedence than the other operators. */
  ne?: DateTime | null; /* Not equal to. */
  gt?: DateTime | null; /* Greater than. */
  gte?: DateTime | null; /* Greater than or equal to. */
  lt?: DateTime | null; /* Less than. */
  lte?: DateTime | null; /* Less than or equal to. */
  between?: DateTime[] | null; /* A two element tuple describing a range of values. */
  notBetween?: DateTime[] | null; /* A two element tuple describing an excluded range of values. */
  in?: DateTime[] | null; /* A list of values to include. */
  notIn?: DateTime[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface UserIdWhereArgs {
  eq?: string | null; /* Equal to. This takes a higher precedence than the other operators. */
  ne?: string | null; /* Not equal to. */
  in?: string[] | null; /* A list of values to include. */
  notIn?: string[] | null; /* A list of values to exclude. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface UserCreatedAtWhereArgs {
  eq?: DateTime | null; /* Equal to. This takes a higher precedence than the other operators. */
  ne?: DateTime | null; /* Not equal to. */
  gt?: DateTime | null; /* Greater than. */
  gte?: DateTime | null; /* Greater than or equal to. */
  lt?: DateTime | null; /* Less than. */
  lte?: DateTime | null; /* Less than or equal to. */
  between?: DateTime[] | null; /* A two element tuple describing a range of values. */
  notBetween?: DateTime[] | null; /* A two element tuple describing an excluded range of values. */
  in?: DateTime[] | null; /* A list of values to include. */
  notIn?: DateTime[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface UserLastLoginWhereArgs {
  eq?: DateTime | null; /* Equal to. This takes a higher precedence than the other operators. */
  ne?: DateTime | null; /* Not equal to. */
  gt?: DateTime | null; /* Greater than. */
  gte?: DateTime | null; /* Greater than or equal to. */
  lt?: DateTime | null; /* Less than. */
  lte?: DateTime | null; /* Less than or equal to. */
  between?: DateTime[] | null; /* A two element tuple describing a range of values. */
  notBetween?: DateTime[] | null; /* A two element tuple describing an excluded range of values. */
  in?: DateTime[] | null; /* A list of values to include. */
  notIn?: DateTime[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface UserUsernameWhereArgs {
  eq?: string | null; /* Equal to. This takes a higher precedence than the other operators. */
  ne?: string | null; /* Not equal to. */
  gt?: string | null; /* Greater than. */
  gte?: string | null; /* Greater than or equal to. */
  lt?: string | null; /* Less than. */
  lte?: string | null; /* Less than or equal to. */
  between?: string[] | null; /* A two element tuple describing a range of values. */
  notBetween?: string[] | null; /* A two element tuple describing an excluded range of values. */
  in?: string[] | null; /* A list of values to include. */
  notIn?: string[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}
/* Where filter arguments for the PC type */
export interface PcWhereArgs {
  id?: PcIdWhereArgs | null; /* Filter results for on the id field. */
  modifiedAt?: PcModifiedAtWhereArgs | null; /* Filter results for on the modifiedAt field. */
  player?: UserWhereArgs | null; /* Filter results based on a related object via the player connection */
  createdAt?: PcCreatedAtWhereArgs | null; /* Filter results for on the createdAt field. */
  playerId?: PcPlayerIdWhereArgs | null; /* Filter results for on the playerId field. */
  OR?: PcWhereArgs[] | null; /* Combine mutiple where expressions using the OR operator. */
  AND?: PcWhereArgs[] | null; /* Combine mutiple where expressions using the AND operator. */
}

export interface PcIdWhereArgs {
  eq?: string | null; /* Equal to. This takes a higher precedence than the other operators. */
  ne?: string | null; /* Not equal to. */
  in?: string[] | null; /* A list of values to include. */
  notIn?: string[] | null; /* A list of values to exclude. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface PcModifiedAtWhereArgs {
  eq?: DateTime | null; /* Equal to. This takes a higher precedence than the other operators. */
  ne?: DateTime | null; /* Not equal to. */
  gt?: DateTime | null; /* Greater than. */
  gte?: DateTime | null; /* Greater than or equal to. */
  lt?: DateTime | null; /* Less than. */
  lte?: DateTime | null; /* Less than or equal to. */
  between?: DateTime[] | null; /* A two element tuple describing a range of values. */
  notBetween?: DateTime[] | null; /* A two element tuple describing an excluded range of values. */
  in?: DateTime[] | null; /* A list of values to include. */
  notIn?: DateTime[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface PcCreatedAtWhereArgs {
  eq?: DateTime | null; /* Equal to. This takes a higher precedence than the other operators. */
  ne?: DateTime | null; /* Not equal to. */
  gt?: DateTime | null; /* Greater than. */
  gte?: DateTime | null; /* Greater than or equal to. */
  lt?: DateTime | null; /* Less than. */
  lte?: DateTime | null; /* Less than or equal to. */
  between?: DateTime[] | null; /* A two element tuple describing a range of values. */
  notBetween?: DateTime[] | null; /* A two element tuple describing an excluded range of values. */
  in?: DateTime[] | null; /* A list of values to include. */
  notIn?: DateTime[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface PcPlayerIdWhereArgs {
  eq?: string | null; /* Equal to. This takes a higher precedence than the other operators. */
  ne?: string | null; /* Not equal to. */
  in?: string[] | null; /* A list of values to include. */
  notIn?: string[] | null; /* A list of values to exclude. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface UserOrderByArgs {
  field?: UserOrderByField | null; 
  direction?: OrderByDirection | null; 
}

export interface RoleOrderByArgs {
  field?: RoleOrderByField | null; 
  direction?: OrderByDirection | null; 
}

export interface PcOrderByArgs {
  field?: PcOrderByField | null; 
  direction?: OrderByDirection | null; 
}
/* Where filter arguments for the File type */
export interface FileWhereArgs {
  createdAt?: FileCreatedAtWhereArgs | null; /* Filter results for on the createdAt field. */
  id?: FileIdWhereArgs | null; /* Filter results for on the id field. */
  blobMimeType?: FileBlobMimeTypeWhereArgs | null; /* Filter results for on the blobMimeType field. */
  modifiedAt?: FileModifiedAtWhereArgs | null; /* Filter results for on the modifiedAt field. */
  blobUrl?: FileBlobUrlWhereArgs | null; /* Filter results for on the blobUrl field. */
  name?: FileNameWhereArgs | null; /* Filter results for on the name field. */
  OR?: FileWhereArgs[] | null; /* Combine mutiple where expressions using the OR operator. */
  AND?: FileWhereArgs[] | null; /* Combine mutiple where expressions using the AND operator. */
}

export interface FileCreatedAtWhereArgs {
  eq?: DateTime | null; /* Equal to. This takes a higher precedence than the other operators. */
  ne?: DateTime | null; /* Not equal to. */
  gt?: DateTime | null; /* Greater than. */
  gte?: DateTime | null; /* Greater than or equal to. */
  lt?: DateTime | null; /* Less than. */
  lte?: DateTime | null; /* Less than or equal to. */
  between?: DateTime[] | null; /* A two element tuple describing a range of values. */
  notBetween?: DateTime[] | null; /* A two element tuple describing an excluded range of values. */
  in?: DateTime[] | null; /* A list of values to include. */
  notIn?: DateTime[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface FileIdWhereArgs {
  eq?: string | null; /* Equal to. This takes a higher precedence than the other operators. */
  ne?: string | null; /* Not equal to. */
  in?: string[] | null; /* A list of values to include. */
  notIn?: string[] | null; /* A list of values to exclude. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface FileBlobMimeTypeWhereArgs {
  eq?: string | null; /* Equal to. This takes a higher precedence than the other operators. */
  ne?: string | null; /* Not equal to. */
  gt?: string | null; /* Greater than. */
  gte?: string | null; /* Greater than or equal to. */
  lt?: string | null; /* Less than. */
  lte?: string | null; /* Less than or equal to. */
  between?: string[] | null; /* A two element tuple describing a range of values. */
  notBetween?: string[] | null; /* A two element tuple describing an excluded range of values. */
  in?: string[] | null; /* A list of values to include. */
  notIn?: string[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface FileModifiedAtWhereArgs {
  eq?: DateTime | null; /* Equal to. This takes a higher precedence than the other operators. */
  ne?: DateTime | null; /* Not equal to. */
  gt?: DateTime | null; /* Greater than. */
  gte?: DateTime | null; /* Greater than or equal to. */
  lt?: DateTime | null; /* Less than. */
  lte?: DateTime | null; /* Less than or equal to. */
  between?: DateTime[] | null; /* A two element tuple describing a range of values. */
  notBetween?: DateTime[] | null; /* A two element tuple describing an excluded range of values. */
  in?: DateTime[] | null; /* A list of values to include. */
  notIn?: DateTime[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface FileBlobUrlWhereArgs {
  eq?: string | null; /* Equal to. This takes a higher precedence than the other operators. */
  ne?: string | null; /* Not equal to. */
  gt?: string | null; /* Greater than. */
  gte?: string | null; /* Greater than or equal to. */
  lt?: string | null; /* Less than. */
  lte?: string | null; /* Less than or equal to. */
  between?: string[] | null; /* A two element tuple describing a range of values. */
  notBetween?: string[] | null; /* A two element tuple describing an excluded range of values. */
  in?: string[] | null; /* A list of values to include. */
  notIn?: string[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface FileNameWhereArgs {
  eq?: string | null; /* Equal to. This takes a higher precedence than the other operators. */
  ne?: string | null; /* Not equal to. */
  gt?: string | null; /* Greater than. */
  gte?: string | null; /* Greater than or equal to. */
  lt?: string | null; /* Less than. */
  lte?: string | null; /* Less than or equal to. */
  between?: string[] | null; /* A two element tuple describing a range of values. */
  notBetween?: string[] | null; /* A two element tuple describing an excluded range of values. */
  in?: string[] | null; /* A list of values to include. */
  notIn?: string[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface FileOrderByArgs {
  field?: FileOrderByField | null; 
  direction?: OrderByDirection | null; 
}
/* A range aggregation that is dedicated for date values.The main difference between this aggregation and the normal rangeaggregation is that the from and to values can be expressed in DateMath expressions, and it is also possible to specify a date formatby which the from and to response fields will be returned. Notethat this aggregation includes the from value and excludes theto value for each range */
export interface DateRangeInput {
  from?: string | null; /* E.G. { &quot;from&quot;: &quot;now-10M/M&quot; } means &#x27;&gt;&#x3D; now minus 10 months, rounded down to the start of the month.&#x27; */
  to?: string | null; /* E.G. { &quot;to&quot;: &quot;now-10M/M&quot; } means &#x27;&lt; now minus 10 months, rounded down to the start of the month.&#x27; */
}

export interface RequestLogTermFilter {
  appId?: string | null; 
  userId?: string | null; 
  username?: string | null; 
  status?: string | null; 
  logType?: string | null; 
  requestMethod?: string | null; 
  originalUrl?: string | null; 
  errors?: string | null; 
  isAdmin?: boolean | null; 
  isBillable?: boolean | null; 
  duration?: number | null; 
  responseSizeBytes?: number | null; 
}

export interface ResolverLogTermFilter {
  fieldName?: string | null; 
  operation?: string | null; 
  path?: string | null; 
  status?: string | null; 
  error?: string | null; 
  parentType?: string | null; 
  returnType?: string | null; 
  parsedReturnType?: string | null; 
  totalDuration?: number | null; 
  count?: number | null; 
  minDuration?: number | null; 
  maxDuration?: number | null; 
  avgDuration?: number | null; 
}

export interface MigrateSchemaInput {
  id: string; 
  name?: string | null; 
  description?: string | null; 
  types?: MigrateTypeInput[] | null; 
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}
/* A Scaphold User. */
export interface MigrateTypeInput {
  id?: string | null; /* A global id */
  name: string; 
  description?: string | null; 
  kind: TypeKind; 
  interfaces?: string[] | null; 
  fields?: MigrateFieldInput[] | null; 
  permissions?: MigratePermissionInput[] | null; 
  values?: string[] | null; 
  isBridge?: boolean | null; 
  position?: number | null; 
  isEditable?: boolean | null; 
  isDeletable?: boolean | null; 
  isExtendable?: boolean | null; 
}
/* A Scaphold User. */
export interface MigrateFieldInput {
  id?: string | null; /* A global id */
  name: string; 
  description?: string | null; 
  columnName?: string | null; 
  nonNull?: boolean | null; 
  unique?: boolean | null; 
  indexed?: boolean | null; 
  type?: string | null; 
  ofType?: string | null; 
  ofTypeNonNull?: boolean | null; 
  reverseName?: string | null; 
  defaultValue?: AnyObject | null; 
  isEditable?: boolean | null; 
  through?: string | null; 
  position?: number | null; 
}
/* A scaphold type permission. */
export interface MigratePermissionInput {
  id?: string | null; 
  scope: PermissionScopeEnum; 
  userFields?: MigrateFieldInput[] | null; 
  protectedFields?: MigrateFieldInput[] | null; 
  roles?: MigrateRoleInput[] | null; 
  create?: boolean | null; 
  read?: boolean | null; 
  update?: boolean | null; 
  delete?: boolean | null; 
  enabled?: boolean | null; 
}
/* A scaphold type permission. */
export interface MigrateRoleInput {
  id: string; 
  name: string; 
}

export interface LoginUserInput {
  username: string; 
  password: string; 
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface ChangeUserPasswordInput {
  id: string; 
  oldPassword: string; 
  newPassword: string; 
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface CreateRoleInput {
  name: string; 
  clientMutationId?: string | null; 
}

export interface UpdateRoleInput {
  name?: string | null; 
  id: string; 
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface DeleteRoleInput {
  id: string; 
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface CreateFileInput {
  name?: string | null; 
  blobFieldName?: string | null; 
  clientMutationId?: string | null; 
}

export interface UpdateFileInput {
  id: string; 
  name?: string | null; 
  blobFieldName?: string | null; 
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface DeleteFileInput {
  id: string; 
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface CreatePcInput {
  player?: CreateUserInput | null; 
  playerId?: string | null; 
  abilities?: AbilityInput[] | null; 
  clientMutationId?: string | null; 
}

export interface CreateUserInput {
  password: Secret; 
  username: string; 
  clientMutationId?: string | null; 
}

export interface AbilityInput {
  raceMod: number; 
  roll2?: number | null; 
  baseScore?: number | null; 
  levelMod: number; 
  roll3?: number | null; 
  roll1?: number | null; 
  proficient?: boolean | null; 
  magicMod: number; 
  abbr: string; 
}

export interface UpdatePcInput {
  id: string; 
  playerId?: string | null; 
  abilities?: AbilityInput[] | null; 
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface DeletePcInput {
  id: string; 
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface UpdateUserInput {
  password?: Secret | null; 
  id: string; 
  username?: string | null; 
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface DeleteUserInput {
  id: string; 
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface AddToUserRolesConnectionInput {
  roleId: string; 
  userId: string; 
  accessLevel: AccessLevel; 
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface UpdateUserRolesConnectionInput {
  roleId: string; 
  userId: string; 
  accessLevel: AccessLevel; 
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}

export interface RemoveFromUserRolesConnectionInput {
  roleId: string; 
  userId: string; 
  clientMutationId?: string | null; /* An opaque string used by frontend frameworks like relay to track requests and responses. */
}
/* Subscription filter arguments for the Role type */
export interface RoleSubscriptionFilter {
  name?: RoleNameSubscriptionFilters | null; /* Filter results for on the name field. */
  id?: RoleIdSubscriptionFilters | null; /* Filter results for on the id field. */
  createdAt?: RoleCreatedAtSubscriptionFilters | null; /* Filter results for on the createdAt field. */
  modifiedAt?: RoleModifiedAtSubscriptionFilters | null; /* Filter results for on the modifiedAt field. */
}

export interface RoleNameSubscriptionFilters {
  eq?: string | null; /* Equal to. This takes a higher precedence than the other operators. */
  gt?: string | null; /* Greater than. */
  gte?: string | null; /* Greater than or equal to. */
  lt?: string | null; /* Less than. */
  lte?: string | null; /* Less than or equal to. */
  ne?: string | null; /* Not equal to. */
  between?: string[] | null; /* A two element tuple describing a range of values. */
  notBetween?: string[] | null; /* A two element tuple describing an excluded range of values. */
  in?: string[] | null; /* A list of values to include. */
  notIn?: string[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  matches?: string | null; /* A regular expression to match on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  notMatches?: string | null; /* A regular expression to reject on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface RoleIdSubscriptionFilters {
  eq?: string | null; /* Equal to. This takes a higher precedence than the other operators. */
  in?: string[] | null; /* A list of values to include. */
  notIn?: string[] | null; /* A list of values to exclude. */
}

export interface RoleCreatedAtSubscriptionFilters {
  eq?: DateTime | null; /* Equal to. This takes a higher precedence than the other operators. */
  gt?: DateTime | null; /* Greater than. */
  gte?: DateTime | null; /* Greater than or equal to. */
  lt?: DateTime | null; /* Less than. */
  lte?: DateTime | null; /* Less than or equal to. */
  ne?: DateTime | null; /* Not equal to. */
  between?: DateTime[] | null; /* A two element tuple describing a range of values. */
  notBetween?: DateTime[] | null; /* A two element tuple describing an excluded range of values. */
  in?: DateTime[] | null; /* A list of values to include. */
  notIn?: DateTime[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  matches?: string | null; /* A regular expression to match on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  notMatches?: string | null; /* A regular expression to reject on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface RoleModifiedAtSubscriptionFilters {
  eq?: DateTime | null; /* Equal to. This takes a higher precedence than the other operators. */
  gt?: DateTime | null; /* Greater than. */
  gte?: DateTime | null; /* Greater than or equal to. */
  lt?: DateTime | null; /* Less than. */
  lte?: DateTime | null; /* Less than or equal to. */
  ne?: DateTime | null; /* Not equal to. */
  between?: DateTime[] | null; /* A two element tuple describing a range of values. */
  notBetween?: DateTime[] | null; /* A two element tuple describing an excluded range of values. */
  in?: DateTime[] | null; /* A list of values to include. */
  notIn?: DateTime[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  matches?: string | null; /* A regular expression to match on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  notMatches?: string | null; /* A regular expression to reject on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}
/* Subscription filter arguments for the File type */
export interface FileSubscriptionFilter {
  createdAt?: FileCreatedAtSubscriptionFilters | null; /* Filter results for on the createdAt field. */
  id?: FileIdSubscriptionFilters | null; /* Filter results for on the id field. */
  blobMimeType?: FileBlobMimeTypeSubscriptionFilters | null; /* Filter results for on the blobMimeType field. */
  modifiedAt?: FileModifiedAtSubscriptionFilters | null; /* Filter results for on the modifiedAt field. */
  blobUrl?: FileBlobUrlSubscriptionFilters | null; /* Filter results for on the blobUrl field. */
  name?: FileNameSubscriptionFilters | null; /* Filter results for on the name field. */
}

export interface FileCreatedAtSubscriptionFilters {
  eq?: DateTime | null; /* Equal to. This takes a higher precedence than the other operators. */
  gt?: DateTime | null; /* Greater than. */
  gte?: DateTime | null; /* Greater than or equal to. */
  lt?: DateTime | null; /* Less than. */
  lte?: DateTime | null; /* Less than or equal to. */
  ne?: DateTime | null; /* Not equal to. */
  between?: DateTime[] | null; /* A two element tuple describing a range of values. */
  notBetween?: DateTime[] | null; /* A two element tuple describing an excluded range of values. */
  in?: DateTime[] | null; /* A list of values to include. */
  notIn?: DateTime[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  matches?: string | null; /* A regular expression to match on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  notMatches?: string | null; /* A regular expression to reject on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface FileIdSubscriptionFilters {
  eq?: string | null; /* Equal to. This takes a higher precedence than the other operators. */
  in?: string[] | null; /* A list of values to include. */
  notIn?: string[] | null; /* A list of values to exclude. */
}

export interface FileBlobMimeTypeSubscriptionFilters {
  eq?: string | null; /* Equal to. This takes a higher precedence than the other operators. */
  gt?: string | null; /* Greater than. */
  gte?: string | null; /* Greater than or equal to. */
  lt?: string | null; /* Less than. */
  lte?: string | null; /* Less than or equal to. */
  ne?: string | null; /* Not equal to. */
  between?: string[] | null; /* A two element tuple describing a range of values. */
  notBetween?: string[] | null; /* A two element tuple describing an excluded range of values. */
  in?: string[] | null; /* A list of values to include. */
  notIn?: string[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  matches?: string | null; /* A regular expression to match on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  notMatches?: string | null; /* A regular expression to reject on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface FileModifiedAtSubscriptionFilters {
  eq?: DateTime | null; /* Equal to. This takes a higher precedence than the other operators. */
  gt?: DateTime | null; /* Greater than. */
  gte?: DateTime | null; /* Greater than or equal to. */
  lt?: DateTime | null; /* Less than. */
  lte?: DateTime | null; /* Less than or equal to. */
  ne?: DateTime | null; /* Not equal to. */
  between?: DateTime[] | null; /* A two element tuple describing a range of values. */
  notBetween?: DateTime[] | null; /* A two element tuple describing an excluded range of values. */
  in?: DateTime[] | null; /* A list of values to include. */
  notIn?: DateTime[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  matches?: string | null; /* A regular expression to match on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  notMatches?: string | null; /* A regular expression to reject on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface FileBlobUrlSubscriptionFilters {
  eq?: string | null; /* Equal to. This takes a higher precedence than the other operators. */
  gt?: string | null; /* Greater than. */
  gte?: string | null; /* Greater than or equal to. */
  lt?: string | null; /* Less than. */
  lte?: string | null; /* Less than or equal to. */
  ne?: string | null; /* Not equal to. */
  between?: string[] | null; /* A two element tuple describing a range of values. */
  notBetween?: string[] | null; /* A two element tuple describing an excluded range of values. */
  in?: string[] | null; /* A list of values to include. */
  notIn?: string[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  matches?: string | null; /* A regular expression to match on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  notMatches?: string | null; /* A regular expression to reject on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface FileNameSubscriptionFilters {
  eq?: string | null; /* Equal to. This takes a higher precedence than the other operators. */
  gt?: string | null; /* Greater than. */
  gte?: string | null; /* Greater than or equal to. */
  lt?: string | null; /* Less than. */
  lte?: string | null; /* Less than or equal to. */
  ne?: string | null; /* Not equal to. */
  between?: string[] | null; /* A two element tuple describing a range of values. */
  notBetween?: string[] | null; /* A two element tuple describing an excluded range of values. */
  in?: string[] | null; /* A list of values to include. */
  notIn?: string[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  matches?: string | null; /* A regular expression to match on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  notMatches?: string | null; /* A regular expression to reject on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}
/* Subscription filter arguments for the PC type */
export interface PcSubscriptionFilter {
  id?: PcIdSubscriptionFilters | null; /* Filter results for on the id field. */
  modifiedAt?: PcModifiedAtSubscriptionFilters | null; /* Filter results for on the modifiedAt field. */
  createdAt?: PcCreatedAtSubscriptionFilters | null; /* Filter results for on the createdAt field. */
  playerId?: PcPlayerIdSubscriptionFilters | null; /* Filter results for on the playerId field. */
}

export interface PcIdSubscriptionFilters {
  eq?: string | null; /* Equal to. This takes a higher precedence than the other operators. */
  in?: string[] | null; /* A list of values to include. */
  notIn?: string[] | null; /* A list of values to exclude. */
}

export interface PcModifiedAtSubscriptionFilters {
  eq?: DateTime | null; /* Equal to. This takes a higher precedence than the other operators. */
  gt?: DateTime | null; /* Greater than. */
  gte?: DateTime | null; /* Greater than or equal to. */
  lt?: DateTime | null; /* Less than. */
  lte?: DateTime | null; /* Less than or equal to. */
  ne?: DateTime | null; /* Not equal to. */
  between?: DateTime[] | null; /* A two element tuple describing a range of values. */
  notBetween?: DateTime[] | null; /* A two element tuple describing an excluded range of values. */
  in?: DateTime[] | null; /* A list of values to include. */
  notIn?: DateTime[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  matches?: string | null; /* A regular expression to match on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  notMatches?: string | null; /* A regular expression to reject on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface PcCreatedAtSubscriptionFilters {
  eq?: DateTime | null; /* Equal to. This takes a higher precedence than the other operators. */
  gt?: DateTime | null; /* Greater than. */
  gte?: DateTime | null; /* Greater than or equal to. */
  lt?: DateTime | null; /* Less than. */
  lte?: DateTime | null; /* Less than or equal to. */
  ne?: DateTime | null; /* Not equal to. */
  between?: DateTime[] | null; /* A two element tuple describing a range of values. */
  notBetween?: DateTime[] | null; /* A two element tuple describing an excluded range of values. */
  in?: DateTime[] | null; /* A list of values to include. */
  notIn?: DateTime[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  matches?: string | null; /* A regular expression to match on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  notMatches?: string | null; /* A regular expression to reject on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface PcPlayerIdSubscriptionFilters {
  eq?: string | null; /* Equal to. This takes a higher precedence than the other operators. */
  in?: string[] | null; /* A list of values to include. */
  notIn?: string[] | null; /* A list of values to exclude. */
}
/* Subscription filter arguments for the User type */
export interface UserSubscriptionFilter {
  password?: UserPasswordSubscriptionFilters | null; /* Filter results for on the password field. */
  modifiedAt?: UserModifiedAtSubscriptionFilters | null; /* Filter results for on the modifiedAt field. */
  id?: UserIdSubscriptionFilters | null; /* Filter results for on the id field. */
  createdAt?: UserCreatedAtSubscriptionFilters | null; /* Filter results for on the createdAt field. */
  lastLogin?: UserLastLoginSubscriptionFilters | null; /* Filter results for on the lastLogin field. */
  username?: UserUsernameSubscriptionFilters | null; /* Filter results for on the username field. */
}

export interface UserPasswordSubscriptionFilters {
  eq?: Secret | null; /* Equal to. This takes a higher precedence than the other operators. */
  gt?: Secret | null; /* Greater than. */
  gte?: Secret | null; /* Greater than or equal to. */
  lt?: Secret | null; /* Less than. */
  lte?: Secret | null; /* Less than or equal to. */
  ne?: Secret | null; /* Not equal to. */
  between?: Secret[] | null; /* A two element tuple describing a range of values. */
  notBetween?: Secret[] | null; /* A two element tuple describing an excluded range of values. */
  in?: Secret[] | null; /* A list of values to include. */
  notIn?: Secret[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  matches?: string | null; /* A regular expression to match on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  notMatches?: string | null; /* A regular expression to reject on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface UserModifiedAtSubscriptionFilters {
  eq?: DateTime | null; /* Equal to. This takes a higher precedence than the other operators. */
  gt?: DateTime | null; /* Greater than. */
  gte?: DateTime | null; /* Greater than or equal to. */
  lt?: DateTime | null; /* Less than. */
  lte?: DateTime | null; /* Less than or equal to. */
  ne?: DateTime | null; /* Not equal to. */
  between?: DateTime[] | null; /* A two element tuple describing a range of values. */
  notBetween?: DateTime[] | null; /* A two element tuple describing an excluded range of values. */
  in?: DateTime[] | null; /* A list of values to include. */
  notIn?: DateTime[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  matches?: string | null; /* A regular expression to match on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  notMatches?: string | null; /* A regular expression to reject on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface UserIdSubscriptionFilters {
  eq?: string | null; /* Equal to. This takes a higher precedence than the other operators. */
  in?: string[] | null; /* A list of values to include. */
  notIn?: string[] | null; /* A list of values to exclude. */
}

export interface UserCreatedAtSubscriptionFilters {
  eq?: DateTime | null; /* Equal to. This takes a higher precedence than the other operators. */
  gt?: DateTime | null; /* Greater than. */
  gte?: DateTime | null; /* Greater than or equal to. */
  lt?: DateTime | null; /* Less than. */
  lte?: DateTime | null; /* Less than or equal to. */
  ne?: DateTime | null; /* Not equal to. */
  between?: DateTime[] | null; /* A two element tuple describing a range of values. */
  notBetween?: DateTime[] | null; /* A two element tuple describing an excluded range of values. */
  in?: DateTime[] | null; /* A list of values to include. */
  notIn?: DateTime[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  matches?: string | null; /* A regular expression to match on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  notMatches?: string | null; /* A regular expression to reject on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface UserLastLoginSubscriptionFilters {
  eq?: DateTime | null; /* Equal to. This takes a higher precedence than the other operators. */
  gt?: DateTime | null; /* Greater than. */
  gte?: DateTime | null; /* Greater than or equal to. */
  lt?: DateTime | null; /* Less than. */
  lte?: DateTime | null; /* Less than or equal to. */
  ne?: DateTime | null; /* Not equal to. */
  between?: DateTime[] | null; /* A two element tuple describing a range of values. */
  notBetween?: DateTime[] | null; /* A two element tuple describing an excluded range of values. */
  in?: DateTime[] | null; /* A list of values to include. */
  notIn?: DateTime[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  matches?: string | null; /* A regular expression to match on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  notMatches?: string | null; /* A regular expression to reject on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}

export interface UserUsernameSubscriptionFilters {
  eq?: string | null; /* Equal to. This takes a higher precedence than the other operators. */
  gt?: string | null; /* Greater than. */
  gte?: string | null; /* Greater than or equal to. */
  lt?: string | null; /* Less than. */
  lte?: string | null; /* Less than or equal to. */
  ne?: string | null; /* Not equal to. */
  between?: string[] | null; /* A two element tuple describing a range of values. */
  notBetween?: string[] | null; /* A two element tuple describing an excluded range of values. */
  in?: string[] | null; /* A list of values to include. */
  notIn?: string[] | null; /* A list of values to exclude. */
  like?: string | null; /* A pattern to match for likeness. */
  notLike?: string | null; /* A pattern to match for likeness and exclude. */
  matches?: string | null; /* A regular expression to match on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  notMatches?: string | null; /* A regular expression to reject on. Note that unlike &#x27;like&#x27; this uses regular expression syntax instead of SQL like syntax. */
  isNull?: boolean | null; /* Filters for null values. This takes precedence after &#x27;eq&#x27; but before all other fields */
}
export interface NodeQueryArgs {
  id: string; 
}
export interface GetRoleQueryArgs {
  id: string; 
}
export interface GetFileQueryArgs {
  id: string; 
}
export interface GetPcQueryArgs {
  id: string; 
}
export interface GetUserQueryArgs {
  id: string; 
}
export interface MembersRoleArgs {
  where?: UserWhereArgs | null; 
  orderBy?: UserOrderByArgs[] | null; 
  first?: number | null; 
  after?: string | null; 
  last?: number | null; 
  before?: string | null; 
}
export interface RolesUserArgs {
  where?: RoleWhereArgs | null; 
  orderBy?: RoleOrderByArgs[] | null; 
  first?: number | null; 
  after?: string | null; 
  last?: number | null; 
  before?: string | null; 
}
export interface PlayerCharactersUserArgs {
  where?: PcWhereArgs | null; 
  orderBy?: PcOrderByArgs[] | null; 
  first?: number | null; 
  after?: string | null; 
  last?: number | null; 
  before?: string | null; 
}
export interface AllRolesViewerArgs {
  where?: RoleWhereArgs | null; 
  orderBy?: RoleOrderByArgs[] | null; 
  first?: number | null; 
  after?: string | null; 
  last?: number | null; 
  before?: string | null; 
}
export interface AllFilesViewerArgs {
  where?: FileWhereArgs | null; 
  orderBy?: FileOrderByArgs[] | null; 
  first?: number | null; 
  after?: string | null; 
  last?: number | null; 
  before?: string | null; 
}
export interface AllPcsViewerArgs {
  where?: PcWhereArgs | null; 
  orderBy?: PcOrderByArgs[] | null; 
  first?: number | null; 
  after?: string | null; 
  last?: number | null; 
  before?: string | null; 
}
export interface AllUsersViewerArgs {
  where?: UserWhereArgs | null; 
  orderBy?: UserOrderByArgs[] | null; 
  first?: number | null; 
  after?: string | null; 
  last?: number | null; 
  before?: string | null; 
}
export interface EdgesRequestLogSearchResultsArgs {
  q?: string | null; 
  first?: number | null; 
  after?: string | null; 
}
export interface AvgRequestLogAggregationSetArgs {
  field?: RequestLogNumericField | null; 
}
export interface CardinalityRequestLogAggregationSetArgs {
  field?: RequestLogField | null; 
  precision_threshhold?: number | null; 
}
export interface MaxRequestLogAggregationSetArgs {
  field?: RequestLogNumericField | null; 
}
export interface MinRequestLogAggregationSetArgs {
  field?: RequestLogNumericField | null; 
}
export interface PercentilesRequestLogAggregationSetArgs {
  field?: RequestLogNumericField | null; 
}
export interface StatsRequestLogAggregationSetArgs {
  field?: RequestLogNumericField | null; 
}
export interface SumRequestLogAggregationSetArgs {
  field?: RequestLogNumericField | null; 
}
export interface ValueCountRequestLogAggregationSetArgs {
  field?: RequestLogNumericField | null; 
}
export interface DateRangeRequestLogAggregationSetArgs {
  field?: RequestLogDateTimeField | null; 
  format?: string | null; 
  ranges: DateRangeInput[]; 
}
export interface DateHistogramRequestLogAggregationSetArgs {
  field?: RequestLogDateTimeField | null; 
  interval?: string | null; 
  format?: string | null; 
  time_zone?: string | null; 
  missing?: string | null; 
}
export interface TermsRequestLogAggregationSetArgs {
  field?: RequestLogStringField | null; 
  size?: number | null; 
  missing?: string | null; 
}
export interface FilterRequestLogAggregationSetArgs {
  term?: RequestLogTermFilter | null; 
}
export interface AvgResolverLogAggregationSetArgs {
  field?: ResolverLogNumericField | null; 
}
export interface CardinalityResolverLogAggregationSetArgs {
  field?: ResolverLogField | null; 
  precision_threshhold?: number | null; 
}
export interface MaxResolverLogAggregationSetArgs {
  field?: ResolverLogNumericField | null; 
}
export interface MinResolverLogAggregationSetArgs {
  field?: ResolverLogNumericField | null; 
}
export interface PercentilesResolverLogAggregationSetArgs {
  field?: ResolverLogNumericField | null; 
}
export interface StatsResolverLogAggregationSetArgs {
  field?: ResolverLogNumericField | null; 
}
export interface SumResolverLogAggregationSetArgs {
  field?: ResolverLogNumericField | null; 
}
export interface ValueCountResolverLogAggregationSetArgs {
  field?: ResolverLogNumericField | null; 
}
export interface DateRangeResolverLogAggregationSetArgs {
  field?: ResolverLogDateTimeField | null; 
  format?: string | null; 
  ranges: DateRangeInput[]; 
}
export interface DateHistogramResolverLogAggregationSetArgs {
  field?: ResolverLogDateTimeField | null; 
  interval?: string | null; 
  format?: string | null; 
  time_zone?: string | null; 
  missing?: string | null; 
}
export interface TermsResolverLogAggregationSetArgs {
  field?: ResolverLogStringField | null; 
  size?: number | null; 
  missing?: string | null; 
}
export interface FilterResolverLogAggregationSetArgs {
  term?: ResolverLogTermFilter | null; 
}
export interface MigrateSchemaMutationArgs {
  input: MigrateSchemaInput; 
}
export interface LoginUserMutationArgs {
  input: LoginUserInput; 
}
export interface ChangeUserPasswordMutationArgs {
  input: ChangeUserPasswordInput; 
}
export interface CreateRoleMutationArgs {
  input: CreateRoleInput; 
}
export interface UpdateRoleMutationArgs {
  input: UpdateRoleInput; 
}
export interface DeleteRoleMutationArgs {
  input: DeleteRoleInput; 
}
export interface CreateFileMutationArgs {
  input: CreateFileInput; 
}
export interface UpdateFileMutationArgs {
  input: UpdateFileInput; 
}
export interface DeleteFileMutationArgs {
  input: DeleteFileInput; 
}
export interface CreatePcMutationArgs {
  input: CreatePcInput; 
}
export interface UpdatePcMutationArgs {
  input: UpdatePcInput; 
}
export interface DeletePcMutationArgs {
  input: DeletePcInput; 
}
export interface CreateUserMutationArgs {
  input: CreateUserInput; 
}
export interface UpdateUserMutationArgs {
  input: UpdateUserInput; 
}
export interface DeleteUserMutationArgs {
  input: DeleteUserInput; 
}
export interface AddToUserRolesConnectionMutationArgs {
  input: AddToUserRolesConnectionInput; 
}
export interface UpdateUserRolesConnectionMutationArgs {
  input: UpdateUserRolesConnectionInput; 
}
export interface RemoveFromUserRolesConnectionMutationArgs {
  input: RemoveFromUserRolesConnectionInput; 
}
export interface SubscribeToRoleSubscriptionArgs {
  filter?: RoleSubscriptionFilter | null; 
  mutations: RoleMutationEvent[]; 
}
export interface SubscribeToFileSubscriptionArgs {
  filter?: FileSubscriptionFilter | null; 
  mutations: FileMutationEvent[]; 
}
export interface SubscribeToPcSubscriptionArgs {
  filter?: PcSubscriptionFilter | null; 
  mutations: PcMutationEvent[]; 
}
export interface SubscribeToUserSubscriptionArgs {
  filter?: UserSubscriptionFilter | null; 
  mutations: UserMutationEvent[]; 
}
/* Values for the AccessLevel enum */
export type AccessLevel = "admin" | "readwrite" | "readonly";

/* Values for the UserOrderByField enum */
export type UserOrderByField = "password" | "modifiedAt" | "id" | "createdAt" | "lastLogin" | "username";

/* Values for the OrderByDirection enum */
export type OrderByDirection = "ASC" | "DESC";

/* Values for the RoleOrderByField enum */
export type RoleOrderByField = "name" | "id" | "createdAt" | "modifiedAt";

/* Values for the PcOrderByField enum */
export type PcOrderByField = "id" | "modifiedAt" | "createdAt";

/* Values for the FileOrderByField enum */
export type FileOrderByField = "createdAt" | "id" | "blobMimeType" | "modifiedAt" | "blobUrl" | "name";

/* Values for the RequestLogNumericField enum */
export type RequestLogNumericField = "duration" | "responseSizeBytes";

/* Values for the RequestLogField enum */
export type RequestLogField = "appId" | "userId" | "isAdmin" | "username" | "isBillable" | "status" | "logType" | "start" | "createdAt" | "duration" | "durationHr" | "responseSizeBytes" | "requestMethod" | "originalUrl" | "errors" | "resolvers";

/* Values for the RequestLogDateTimeField enum */
export type RequestLogDateTimeField = "createdAt";

/* Values for the RequestLogStringField enum */
export type RequestLogStringField = "appId" | "userId" | "username" | "status" | "logType" | "requestMethod" | "originalUrl" | "errors";

/* Values for the ResolverLogNumericField enum */
export type ResolverLogNumericField = "totalDuration" | "count" | "minDuration" | "maxDuration" | "avgDuration";

/* Values for the ResolverLogField enum */
export type ResolverLogField = "fieldName" | "operation" | "start" | "path" | "status" | "error" | "totalDuration" | "count" | "minDuration" | "maxDuration" | "avgDuration" | "parentType" | "returnType" | "parsedReturnType";

/* Values for the ResolverLogDateTimeField enum */
export type ResolverLogDateTimeField = "start";

/* Values for the ResolverLogStringField enum */
export type ResolverLogStringField = "fieldName" | "operation" | "path" | "status" | "error" | "parentType" | "returnType" | "parsedReturnType";

/* Options for types that can be built on scaphold. */
export type TypeKind = "OBJECT" | "ENUM" | "INTERFACE";

/* Values for the PermissionScopeEnum enum */
export type PermissionScopeEnum = "EVERYONE" | "AUTHENTICATED" | "RELATION" | "ROLE";


export type RoleMutationEvent = "createRole" | "updateRole" | "deleteRole";


export type FileMutationEvent = "createFile" | "updateFile" | "deleteFile";


export type PcMutationEvent = "createPc" | "updatePc" | "deletePc";


export type UserMutationEvent = "loginUser" | "createUser" | "updateUser" | "deleteUser";

